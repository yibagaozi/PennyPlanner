name: Build & Package JavaFX App

on:
  workflow_dispatch:
  push:
    branches: [ workflow-test ]

jobs:
  build-linux:
    name: Build on Linux (deb + jar)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Liberica JDK 21 Full (with JavaFX)
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: '21'
          cache: maven

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=$SDKMAN_CANDIDATES_DIR/java/current" >> $GITHUB_ENV

      - name: Build Jar
        run: mvn clean package -DskipTests

      - name: Create jlink runtime
        run: |
          $JAVA_HOME/bin/jlink \
            --add-modules java.base,java.desktop,javafx.controls,javafx.fxml \
            --output runtime \
            --strip-debug --no-header-files --no-man-pages --compress=2

      - name: Create dist folder
        run: mkdir dist

      - name: Package as .deb
        run: |
          $JAVA_HOME/bin/jpackage \
            --type deb \
            --name PennyPlanner \
            --input target \
            --main-jar PennyPlanner-*.jar \
            --main-class org.softeng.group77.pennyplanner.controller.MainApp \
            --icon src/main/resources/icon.png \
            --runtime-image runtime \
            --dest dist \
            --app-version 2.0.0

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-dist
          path: |
            dist/*.deb
            target/*.jar

  build-windows:
    name: Build on Windows (msi + jar)
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Liberica JDK 21 Full (with JavaFX)
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: '21'
          cache: maven

      - name: Build Jar
        run: mvn clean package -DskipTests

      - name: Create jlink runtime
        run: |
          jlink ^
            --add-modules java.base,java.desktop,javafx.controls,javafx.fxml ^
            --output runtime ^
            --strip-debug --no-header-files --no-man-pages --compress=2

      - name: Create dist folder
        run: mkdir dist

      - name: Package as .msi
        run: jpackage --type msi --name PennyPlanner --input target --main-jar PennyPlanner-*.jar --main-class org.softeng.group77.pennyplanner.controller.MainApp --icon src\main\resources\icon.ico --runtime-image runtime --dest dist --app-version 2.0.0

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-dist
          path: |
            dist\*.msi
            target\*.jar

  build-macos:
    name: Build on macOS (dmg + jar)
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Liberica JDK 21 Full (with JavaFX)
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: '21'
          cache: maven

      - name: Build Jar
        run: mvn clean package -DskipTests

      - name: Create jlink runtime
        run: |
          jlink \
            --add-modules java.base,java.desktop,javafx.controls,javafx.fxml \
            --output runtime \
            --strip-debug --no-header-files --no-man-pages --compress=2

      - name: Create dist folder
        run: mkdir dist

      - name: Package as .dmg
        run: |
          jpackage \
            --type dmg \
            --name PennyPlanner \
            --input target \
            --main-jar PennyPlanner-*.jar \
            --main-class org.softeng.group77.pennyplanner.controller.MainApp \
            --icon src/main/resources/icon.icns \
            --runtime-image runtime \
            --dest dist \
            --app-version 2.0.0

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-dist
          path: |
            dist/*.dmg
            target/*.jar
