name: Build & Package JavaFX App

on:
  workflow_dispatch:
  push:
    branches: [ workflow-test ]

jobs:
  build-common:
    name: Build JAR
    runs-on: ubuntu-latest
    outputs:
      jar-name: ${{ steps.set-output.outputs.jar-name }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Liberica JDK
      uses: sdkman/sdkman-action@master
      with:
        candidate: java
        version: 21.0.2-librca

    - name: Build Jar
      run: mvn clean package -DskipTests

    - name: Upload Jar
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/PennyPlanner-2.0.0-PreRelease.jar

  build-linux:
    name: Package for Linux (.deb)
    needs: build-common
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: target

    - name: Install jpackage dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y fakeroot libfuse2

    - name: Package .deb
      run: |
        mkdir dist
        jpackage \
          --type deb \
          --name PennyPlanner \
          --input target \
          --main-jar PennyPlanner-2.0.0-PreRelease.jar \
          --main-class org.softeng.group77.pennyplanner.controller.MainApp \
          --icon src/main/resources/icon.png \
          --dest dist \
          --app-version 2.0.0

    - uses: actions/upload-artifact@v4
      with:
        name: installer-deb
        path: dist/*.deb

  build-windows:
    name: Package for Windows (.msi)
    needs: build-common
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: target

    - name: Package .msi
      run: |
        mkdir dist
        jpackage ^
          --type msi ^
          --name PennyPlanner ^
          --input target ^
          --main-jar PennyPlanner-2.0.0-PreRelease.jar ^
          --main-class org.softeng.group77.pennyplanner.controller.MainApp ^
          --icon src/main/resources/icon.png ^
          --dest dist ^
          --app-version 2.0.0

    - uses: actions/upload-artifact@v4
      with:
        name: installer-msi
        path: dist/*.msi

  build-macos:
    name: Package for macOS (.dmg)
    needs: build-common
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: target

    - name: Package .dmg
      run: |
        mkdir dist
        jpackage \
          --type dmg \
          --name PennyPlanner \
          --input target \
          --main-jar PennyPlanner-2.0.0-PreRelease.jar \
          --main-class org.softeng.group77.pennyplanner.controller.MainApp \
          --icon src/main/resources/icon.png \
          --dest dist \
          --app-version 2.0.0

    - uses: actions/upload-artifact@v4
      with:
        name: installer-dmg
        path: dist/*.dmg
